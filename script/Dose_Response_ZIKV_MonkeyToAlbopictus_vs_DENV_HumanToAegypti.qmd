---
title: "Comparison of Zika Virus Transmission From Squirrel Monkeys to Aedes albopictus (Hanley et al. 2023) and Dengue Virus Transmission From Humans to Aedes aegypti (Nguyen et al. 2013, Duong et al. 2015)"
author: "Helene Cecilia"
format: html
---

```{r}
#| label: load-packages
#| echo: false

rm(list=ls())

## Loading Packages  ------------------
library(tidyverse)
library(bbmle) # for mle2, parnames
library(emdbook) # for dbetabinom
library(ggplot2)
library(nls2)
library(mgcv) # for rmvn, gam
library(scales) # for alpha function
library(funrar) # for matrix_to_stack
library(readxl)
library(patchwork)
library(tmvtnorm) # for truncated multi variate normal rtmvnorm
library(investr) # for predFit
library(DHARMa)
library(effects)
library(nlstools)
library(bbmle) # for mle2, parnames

## Set Work Directory ------------------------------------------------------
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # set to source file location
getwd()

## Load source files ------------------
source('Dose_Response_Functions.R')

## -------------------------------
# set.seed(3)
tolerance = 1e-7 

save_path <- "../output/result_files/transmission_to_mosquitoes/zika_sylvatic_vs_dengue_literature/"
```


```{r}
#| label: data-loading-and-formatting
#| echo: false

# ZIKV squirrel data formatting -----
df_tmp <- read.csv("../data/Table_SX_Sylvatic_ZIKV_Cynomolgus_Macaques.csv",
                   sep = "\t", dec = ".")
df_tmp <- df_tmp[,c("ID","Sex","Final.Treatment","Day.Post.Infection","Viremia.deduced",
                    "Number.of.mosquitoes.that.engorged.AND.survived.to.titer",
                    "Number.of.mosquitoes.with.detectable.body.infection",
                    "Number.of.mosquitoes.with.detectable.leg.infection")]

colnames(df_tmp) <- c("ID","Sex","Final.Treatment","Day.Post.Infection","Viremia_log10_corr",
                      "fed_surv_mosq_transm","body_mosq_transm_raw", "leg_mosq_transm_raw")

# selection :
# remove control individuals
# do not remove viremia 0 : some transmitted to mosquitoes !!
# keep all with non NA body_mosq_transm_raw and leg_mosq_transm_raw (but keep 0)

select_body <- df_tmp[!is.na(df_tmp$Viremia_log10_corr) & !is.na(df_tmp$body_mosq_transm_raw) & df_tmp$Final.Treatment != "Control",]
select_leg <- df_tmp[!is.na(df_tmp$Viremia_log10_corr) & !is.na(df_tmp$leg_mosq_transm_raw) & df_tmp$Final.Treatment != "Control",]

zikv_cy_body <- select_body[,c("ID","Viremia_log10_corr","fed_surv_mosq_transm","body_mosq_transm_raw")]
zikv_cy_leg <- select_leg[,c("ID","Viremia_log10_corr","fed_surv_mosq_transm","leg_mosq_transm_raw")]

colnames(zikv_cy_body) <- c("ID","log_V","N","k")
zikv_cy_body$paper <- "zikv"
zikv_cy_body$disease_class <- "unknown"
zikv_cy_body$serotype <- NA

colnames(zikv_cy_leg) <- c("ID","log_V","N","k")
zikv_cy_leg$paper <- "zikv"
zikv_cy_leg$disease_class <- "unknown"
zikv_cy_leg$serotype <- NA

# Exclude 0,0 points which are too constraining for fitting
zikv_cy_body <- filter(zikv_cy_body, !(log_V == 0 & k == 0))
zikv_cy_leg <- filter(zikv_cy_leg, !(log_V == 0 & k == 0))

# ZIKV squirrel data formatting -----
df_tmp <- read.csv("../data/Table_S3_Sylvatic_ZIKV_Squirrel_Monkeys.csv",
                   sep = "\t", dec = ".")
df_tmp <- df_tmp[,c("ID","Sex","Final.Treatment","Day.Post.Infection","Viremia.deduced",
                    "Number.of.mosquitoes.that.engorged.AND.survived.to.titer",
                    "Number.of.mosquitoes.with.detectable.body.infection",
                    "Number.of.mosquitoes.with.detectable.leg.infection")]

colnames(df_tmp) <- c("ID","Sex","Final.Treatment","Day.Post.Infection","Viremia_pfu_corr",
                      "fed_surv_mosq_transm","body_mosq_transm_raw", "leg_mosq_transm_raw")

# selection :
# remove control individuals
# do not remove viremia 0 : some transmitted to mosquitoes !!
# keep all with non NA body_mosq_transm_raw and leg_mosq_transm_raw (but keep 0)

select_body <- df_tmp[!is.na(df_tmp$Viremia_pfu_corr) & !is.na(df_tmp$body_mosq_transm_raw) & df_tmp$Final.Treatment != "Control",]
select_leg <- df_tmp[!is.na(df_tmp$Viremia_pfu_corr) & !is.na(df_tmp$leg_mosq_transm_raw) & df_tmp$Final.Treatment != "Control",]

# log transform viremia
select_body$Viremia_log10_corr <- log10(select_body$Viremia_pfu_corr + 1)
select_leg$Viremia_log10_corr <- log10(select_leg$Viremia_pfu_corr + 1)

zikv_sq_body <- select_body[,c("ID","Viremia_log10_corr","fed_surv_mosq_transm","body_mosq_transm_raw")]
zikv_sq_leg <- select_leg[,c("ID","Viremia_log10_corr","fed_surv_mosq_transm","leg_mosq_transm_raw")]

colnames(zikv_sq_body) <- c("ID","log_V","N","k")
zikv_sq_body$paper <- "zikv"
zikv_sq_body$disease_class <- "unknown"
zikv_sq_body$serotype <- NA

colnames(zikv_sq_leg) <- c("ID","log_V","N","k")
zikv_sq_leg$paper <- "zikv"
zikv_sq_leg$disease_class <- "unknown"
zikv_sq_leg$serotype <- NA

# Exclude 0,0 points which are too constraining for fitting
zikv_sq_body <- filter(zikv_sq_body, !(log_V == 0 & k == 0))
zikv_sq_leg <- filter(zikv_sq_leg, !(log_V == 0 & k == 0))

# Data from the literature  ------

duong_df <- read.csv("../data/literature/Duong.csv") 
duong_df$paper <- "duong"
duong_df$plasma_viremia <- NULL
colnames(duong_df) <- c("ID","disease_class","serotype","N","k","log_V","paper")


nguyen_df <- read.csv("../data/literature/Nguyen.csv")
summary(as.factor(nguyen_df$Serotype)) # all serotypes
nguyen_df$paper <- "nguyen"
nguyen_df$disease_class <- "unknown"
colnames(nguyen_df) <- c("ID","serotype","log_V","N","k","paper","disease_class")
nguyen_df <- filter(nguyen_df, !(log_V == 0 & k == 0)) # 0 observations removed

```

```{r}
#| label: dose-resp-fitting-BODY
#| echo: false

# Find good starting values : done only once -----
# (for ZIKV then used for others)
# these starting values were hard coded in the appropriate optim functions in Dose_Response_Functions.R

# pred_log <- LogFunction(seq(0,10,0.1), log_beta0 = 5, beta1 = 0.8) #ok
# plot(zikv_data$log_V, zikv_data$k/zikv_data$N)
# lines(seq(0,10,0.1), pred_log)

# pred_log <- Ferguson(seq(0,10,0.1), theta0 = 5, theta1 = 3) #ok
# plot(zikv_data$log_V, zikv_data$k/zikv_data$N)
# lines(seq(0,10,0.1), pred_log)

# pred_log <- Hill(seq(0,10,0.1), gamma0 = 137, gamma1 = 3.2) #ok
# plot(zikv_data$log_V, zikv_data$k/zikv_data$N)
# lines(seq(0,10,0.1), pred_log)

# Find best functional form for dose-response curve -----

# ZIKV squirrel and cyno together -----

zikv_body <- rbind(zikv_cy_body, zikv_sq_body)
dose_resp_function_selection(zikv_body,"sylv_ZIKV_all_BODY")
# AICc and other command outputs are printed at the end of the chunk and not in the console (not very convenient, sorry). You can click the "Show in New Window" button to have a new window dedicated to outputs

#             AICc        df
# binom_Log	135.2832	2		
# betabinom_Log	124.0304	3	: SELECTED	
# binom_Ferg	139.8902	2		
# betabinom_Ferg	126.9704	3		
# binom_Hill	139.5581	2		
# betabinom_Hill	128.0383	3	


zikv_betabinom_Log <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_all_BODY.rds"))

# Check how it looks
pred <- LogFunction(seq(0.1,8.15, length.out = 100),
                    zikv_betabinom_Log@coef[1],
                    zikv_betabinom_Log@coef[2])
ggplot() + geom_point(aes(x = zikv_body$log_V,
                          y = zikv_body$k/zikv_body$N)) +
  geom_line(aes(x = seq(0.1,8.15, length.out = 100),
                y = pred))

zikv_betabinom_Log@coef
confint(zikv_betabinom_Log, method = "quad")
# log_beta0 4.16 [3.71 ; 4.60]
# beta1 0.96 [0.57 ; 1.35]
# overdispersion 5.20 [0.02 ; 10.38] 
exp(zikv_betabinom_Log@coef)
exp(confint(zikv_betabinom_Log, method = "quad")) # to transform log.beta0
# beta0 63.90 [41.03 ; 99.51] 


# ZIKV cyno -----

dose_resp_function_selection(zikv_cy_body,"sylv_ZIKV_cyno_BODY")

#             AICc        df
# binom_Log	37.58452	2		
# betabinom_Log	41.53126	3		
# binom_Ferg	36.75367	2		: SELECTED
# betabinom_Ferg	40.90191	3		
# binom_Hill	40.78785	2		
# betabinom_Hill	44.37477	3	

zikv_cy_binom_Ferg <- readRDS(paste0(save_path,"binom_Ferg_sylv_ZIKV_cyno_BODY.rds"))

# Check how it looks
pred <- Ferguson(seq(0.1,8.15, length.out = 100),
                    exp(zikv_cy_binom_Ferg@coef[1]),
                    zikv_cy_binom_Ferg@coef[2])
ggplot() + geom_point(aes(x = zikv_cy_body$log_V,
                          y = zikv_cy_body$k/zikv_cy_body$N)) +
  geom_line(aes(x = seq(0.1,8.15, length.out = 100),
                y = pred))

zikv_cy_binom_Ferg@coef
confint(zikv_cy_binom_Ferg, method = "quad")
# log_theta0 1.43 [1.37 ; 1.49]
# theta1 5.23 [3.23 ; 7.23]
exp(zikv_cy_binom_Ferg@coef)
exp(confint(zikv_cy_binom_Ferg, method = "quad")) # to transform log.theta0
# theta0 4.17 [3.93 ; 4.43] 


# ZIKV squirrel -----

dose_resp_function_selection(zikv_sq_body,"sylv_ZIKV_squirrel_BODY")

#             AICc        df
# binom_Log	82.31582	2		
# betabinom_Log	79.57606	3		: SELECTED
# binom_Ferg	82.56010	2		
# betabinom_Ferg	80.53789	3		
# binom_Hill	82.50344	2		
# betabinom_Hill	80.85316	3


# If you want to choose between a betabinom and a binom one,
# you can use likelihood ratio test because they're nested models
# https://stats.stackexchange.com/questions/407154/can-log-likelihood-be-used-to-compare-a-binomial-model-to-its-beta-binomial-eq
zikv_sq_binom_Log <- readRDS(paste0(save_path,"binom_Log_sylv_ZIKV_squirrel_BODY.rds"))
zikv_sq_betabinom_Log <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_squirrel_BODY.rds"))

confint(zikv_sq_betabinom_Log, method = "quad")
# overdispersion CI contains zero, which justifies doing the LRT

lrt(LL0 = zikv_sq_binom_Log@details$value,
    LL1 = zikv_sq_betabinom_Log@details$value,
    df0 = 2, df1 = 3)
# select betabinom
# $L01
# [1] 5.368336
# 
# $df
# [1] 1
# 
# $`p-value`
# [1] 0.02050553

# Check how it looks
pred <- LogFunction(seq(0.1,8.15, length.out = 100),
                    zikv_sq_betabinom_Log@coef[1],
                    zikv_sq_betabinom_Log@coef[2])
ggplot() + geom_point(aes(x = zikv_sq_body$log_V,
                          y = zikv_sq_body$k/zikv_sq_body$N)) +
  geom_line(aes(x = seq(0.1,8.15, length.out = 100),
                y = pred))

zikv_sq_betabinom_Log@coef
confint(zikv_sq_betabinom_Log, method = "quad")
# log_beta0 5.00 [4.07 ; 5.94]
# beta1 0.70 [0.36 ; 1.04]
# overdispersion 8.58 [-3.36 ; 20.53] contains 0
exp(zikv_sq_betabinom_Log@coef)
exp(confint(zikv_sq_betabinom_Log, method = "quad")) # to transform log.beta0
# beta0 149.0 [58.64 ; 378.6] 

# Nguyen -----
# solution is a parameter to decide how we handle small values. It doesn't have a big impact
# DENV1
nguyen_pfu1_sol2 <- dose_resp_conversion_and_selection(data = nguyen_df,
                                                       serotype = 1,
                                                       solution = 2,
                                                       filename = "DENV1_Nguyen_BODY")

# binom_Log	137.1043	2		
# betabinom_Log	107.6264	3	: SELECTED
# binom_Ferg	141.4691	2		
# betabinom_Ferg	108.0963	3		
# binom_Hill	156.6133	2		
# betabinom_Hill	113.2086	3

# DENV2 
nguyen_pfu2_sol2 <- dose_resp_conversion_and_selection(data = nguyen_df,
                                                       serotype = 2,
                                                       solution = 2,
                                                       filename = "DENV2_Nguyen_BODY")

# binom_Log	92.90815	2		
# betabinom_Log	69.71317	3		: SELECTED
# binom_Ferg	93.72020	2		
# betabinom_Ferg	69.98977	3		
# binom_Hill	99.11092	2		
# betabinom_Hill	70.28101	3

# DENV3 
nguyen_pfu3_sol2 <- dose_resp_conversion_and_selection(data = nguyen_df,
                                                       serotype = 3,
                                                       solution = 2,
                                                       filename = "DENV3_Nguyen_BODY")

# binom_Log	135.75777	2		
# betabinom_Log	76.38505	3	: SELECTED
# binom_Ferg	134.43301	2		
# betabinom_Ferg	76.50524	3		
# binom_Hill	133.36817	2		
# betabinom_Hill	76.55301	3

# DENV4 
nguyen_pfu4_sol2 <- dose_resp_conversion_and_selection(data = nguyen_df,
                                                       serotype = 4,
                                                       solution = 2,
                                                       filename = "DENV4_Nguyen_BODY")

# binom_Log	460.4540	2		
# betabinom_Log	235.7943	3		: SELECTED
# binom_Ferg	461.0496	2		
# betabinom_Ferg	235.9748	3		
# binom_Hill	461.6207	2		
# betabinom_Hill	236.0666	3

```

```{r}
#| label: dose-resp-fitting-LEG
#| echo: false

# Find best functional form for dose-response curve -----

# ZIKV squirrel and cyno together -----
zikv_leg <- rbind(zikv_cy_leg, zikv_sq_leg)

dose_resp_function_selection(zikv_leg,"sylv_ZIKV_all_LEG")

# binom_Log	158.2999	2		
# betabinom_Log	121.5190	3		: SELECTED
# binom_Ferg	164.4323	2		
# betabinom_Ferg	123.5834	3		
# binom_Hill	175.2178	2		
# betabinom_Hill	126.7618	3

zikv_betabinom_Log <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_all_LEG.rds"))

# Check how it looks
pred <- LogFunction(seq(0.1,8.15, length.out = 100),
                    zikv_betabinom_Log@coef[1],
                    zikv_betabinom_Log@coef[2])
ggplot() + geom_point(aes(x = zikv_leg$log_V,
                          y = zikv_leg$k/zikv_leg$N)) +
  geom_line(aes(x = seq(0.1,8.15, length.out = 100),
                y = pred))

coef(zikv_betabinom_Log)
confint(zikv_betabinom_Log, method = "quad")
# 2.86 [2.32 ; 3.41] # log_beta0
# 0.94 [0.56 ; 1.33] # beta1
# 2.64 [0.57 ; 4.71] # overdispersion
exp(coef(zikv_betabinom_Log)) # to transform log.beta0
exp(confint(zikv_betabinom_Log, method = "quad")) # to transform log.beta0
# 17.47 [10.13 ; 30.13] # beta0

# ZIKV cyno -----

dose_resp_function_selection(zikv_cy_leg,"sylv_ZIKV_cyno_LEG")

# binom_Log	47.27156	2		
# betabinom_Log	46.72506	3		: SELECTED
# binom_Ferg	48.20606	2		
# betabinom_Ferg	46.87987	3		
# binom_Hill	54.40722	2		
# betabinom_Hill	49.87716	3

zikv_cy_binom_Log <- readRDS(paste0(save_path,"binom_Log_sylv_ZIKV_cyno_LEG.rds"))
zikv_cy_betabinom_Log <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_cyno_LEG.rds"))

confint(zikv_cy_betabinom_Log, method = "quad")
# overdispersion CI contains zero, which justifies doing the LRT

lrt(LL0 = zikv_cy_binom_Log@details$value,
    LL1 = zikv_cy_betabinom_Log@details$value,
    df0 = 2, df1 = 3)
# select betabinom
# $L01
# [1] 4.832218
# 
# $df
# [1] 1
# 
# $`p-value`
# [1] 0.02793268


# Check how it looks
pred <- LogFunction(seq(0.1,8.15, length.out = 100),
                    zikv_cy_betabinom_Log@coef[1],
                    zikv_cy_betabinom_Log@coef[2])
ggplot() + geom_point(aes(x = zikv_cy_leg$log_V,
                          y = zikv_cy_leg$k/zikv_cy_leg$N)) +
  geom_line(aes(x = seq(0.1,8.15, length.out = 100),
                y = pred))

coef(zikv_cy_betabinom_Log)
confint(zikv_cy_betabinom_Log, method = "quad")
# 3.84 [3.35 ; 4.32] # log_beta0
# 1.59 [0.54 ; 2.64] # beta1
# 9.08 [-6.10 ; 24.27] # overdispersion, contains 0
exp(coef(zikv_cy_betabinom_Log)) # to transform log.beta0
exp(confint(zikv_cy_betabinom_Log, method = "quad")) # to transform log.beta0
# 46.32 [28.49 ; 75.33] # beta0

# ZIKV squirrel -----

dose_resp_function_selection(zikv_sq_leg,"sylv_ZIKV_squirrel_LEG")

# binom_Log	101.74254	2		
# betabinom_Log	77.50173	3		: SELECTED
# binom_Ferg	105.47797	2		
# betabinom_Ferg	78.85349	3		
# binom_Hill	113.60097	2		
# betabinom_Hill	81.60184	3	

zikv_sq_betabinom_Log <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_squirrel_LEG.rds"))

# Check how it looks
pred <- LogFunction(seq(0.1,8.15, length.out = 100),
                    zikv_sq_betabinom_Log@coef[1],
                    zikv_sq_betabinom_Log@coef[2])
ggplot() + geom_point(aes(x = zikv_sq_leg$log_V,
                          y = zikv_sq_leg$k/zikv_sq_leg$N)) +
  geom_line(aes(x = seq(0.1,8.15, length.out = 100),
                y = pred))

coef(zikv_sq_betabinom_Log)
confint(zikv_sq_betabinom_Log, method = "quad")
# 2.53 [1.95 ; 3.12] # log_beta0
# 1.12 [0.59 ; 1.64] # beta1
# 2.31 [-0.02 ; 4.65] # overdispersion, contains 0
exp(coef(zikv_sq_betabinom_Log)) # to transform log.beta0
exp(confint(zikv_sq_betabinom_Log, method = "quad")) # to transform log.beta0
# 12.57 [7.00 ; 22.58] # beta0

# Duong -----
duong_pfu1_sol2 <- dose_resp_conversion_and_selection(data = duong_df,
                                                      serotype = 1,
                                                      solution = 2,
                                                      filename = "DENV1_Duong_LEG")

#                       AICc df
# binom_Log         785.8197  2
# betabinom_Log     200.6688  3 : SELECTED
####### something probably went wrong with the others ########
# binom_Ferg     400726.8703  2
# betabinom_Ferg 400178.1329  3
# binom_Hill     400736.9442  2
# betabinom_Hill 400180.3824  3

duong_pfu2_sol2 <- dose_resp_conversion_and_selection(data = duong_df,
                                                      serotype = 2,
                                                      solution = 2,
                                                      filename = "DENV2_Duong_LEG")
#                       AICc df
# binom_Log         311.2971  2
# betabinom_Log     152.9813  3 : SELECTED
# binom_Ferg     400345.0092  2
# betabinom_Ferg 600141.5704  3
# binom_Hill     600311.6137  2
# betabinom_Hill 600141.7483  3

duong_pfu4_sol2 <- dose_resp_conversion_and_selection(data = duong_df,
                                                      serotype = 4,
                                                      solution = 2,
                                                      filename = "DENV4_Duong_LEG")
#                     AICc df
# binom_Log      166.64203  2
# betabinom_Log   88.22499  3
# binom_Ferg     164.75226  2
# betabinom_Ferg  88.04619  3
# binom_Hill     166.66921  2
# betabinom_Hill  87.98409  3 : SELECTED

```


```{r}
#| label: suppl-plot-fit-and-data-BODY
#| echo: false

nguyen_pfu1_sol2 <- conversion_and_small_values_correction(nguyen_df,
                                                          serotype = 1,
                                                          solution = 2)
nguyen_pfu2_sol2 <- conversion_and_small_values_correction(nguyen_df,
                                                          serotype = 2,
                                                          solution = 2)
nguyen_pfu3_sol2 <- conversion_and_small_values_correction(nguyen_df,
                                                          serotype = 3,
                                                          solution = 2)
nguyen_pfu4_sol2 <- conversion_and_small_values_correction(nguyen_df,
                                                          serotype = 4,
                                                          solution = 2) 

best1_nguyen <- readRDS(paste0(save_path,"betabinom_Log_DENV1_Nguyen_BODY.rds"))
best2_nguyen <- readRDS(paste0(save_path,"betabinom_Log_DENV2_Nguyen_BODY.rds"))
best3_nguyen <- readRDS(paste0(save_path,"betabinom_Log_DENV3_Nguyen_BODY.rds"))
best4_nguyen <- readRDS(paste0(save_path,"betabinom_Log_DENV4_Nguyen_BODY.rds"))

best_zikv_body <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_squirrel_BODY.rds"))

# Plot
predframe <- seq(0,10,length.out = 60)

fit1_nguyen <- LogFunction(log_V = predframe,
                          log_beta0 = as.numeric(best1_nguyen@coef[1]),
                          beta1 = as.numeric(best1_nguyen@coef[2]))

fit2_nguyen <- LogFunction(log_V = predframe,
                           log_beta0 = best2_nguyen@coef[1],
                          beta1 = best2_nguyen@coef[2])

fit3_nguyen <- LogFunction(log_V = predframe,
                           log_beta0 = as.numeric(best3_nguyen@coef[1]),
                           beta1 = as.numeric(best3_nguyen@coef[2]))

fit4_nguyen <- LogFunction(log_V = predframe,
                           log_beta0 = as.numeric(best4_nguyen@coef[1]),
                           beta1 = as.numeric(best4_nguyen@coef[2]))

fit_zikv_body <- LogFunction(log_V = predframe,
                         log_beta0 = as.numeric(best_zikv_body@coef[1]),
                         beta1 = as.numeric(best_zikv_body@coef[2]))

pred <- data.frame(dose = rep(predframe,5),
                   resp = c(fit_zikv_body,
                            fit1_nguyen,
                            fit2_nguyen,
                            fit3_nguyen,
                            fit4_nguyen),
                   type_exact = rep(c("zikv", "nguyen1", "nguyen2", "nguyen3", "nguyen4"), each = length(predframe)),
                   type_paper = rep(c("ZIKV - Present study", "Nguyen et al. 2013", "Nguyen et al. 2013",
                                      "Nguyen et al. 2013", "Nguyen et al. 2013"), each = length(predframe)),
                   virus = rep(c("ZIKV",
                                 "DENV-1",
                                 "DENV-2",
                                 "DENV-3",
                                 "DENV-4"), each = length(predframe)))


# Each curve with the corresponding data

my_colors <- c("Dengue virus 1" = "#252525",
               "Dengue virus 2" = "#636363",
               "Dengue virus 3" = "#969696",
               "Dengue virus 4" = "#cccccc",
               "Zika virus" = "#2b8cbe")

pzb <- ggplot() + geom_line(aes(x = predframe, y = fit_zikv_body,
                                color = "Zika virus"),
                            linewidth = 1.3, alpha = 0.9) +
  geom_point(data = zikv_body, aes(x = log_V, y = k/N, size = N,
                                   color = "Zika virus"), alpha = 0.7) +
  theme_classic() +
  labs(y = "Prob mosquito body infection",
       x = "",
       size = "Sample size") +
  ggtitle("Zika virus") +
  scale_x_continuous(limits = c(0,8.15),
                   expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.03,0.04))) +
  scale_size_continuous(limits=c(1,30),breaks=c(5,15,25),
                        range = c(0,15)) +
  scale_color_manual(values = my_colors, guide = "none") +
  theme(axis.text = element_text(size = 24),
        plot.title = element_text(size = 24),
        legend.title = element_text(size = 24),
        legend.text = element_text(size = 24),
        legend.position = c(0.15,0.75),
        axis.title.y = element_text(size = 24,
                                    margin = margin(r = 15)))


p1n <- ggplot() + geom_line(data = pred[pred$type_exact == "nguyen1",],
                            aes(x = dose, y = resp, color = "Dengue virus 1"),
                            linewidth = 1.3, alpha = 0.9) +
  geom_point(data = nguyen_pfu1_sol2,
             aes(x = log_V, y = k/N, size = N, color = "Dengue virus 1"),
             alpha = 0.7) +
  theme_classic() +
  labs(y = "Prob mosquito body infection",
       x = "",
       size = "") +
  ggtitle("Dengue virus 1") +
    scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.03,0.04))) +
  scale_size_continuous(limits=c(1,30),breaks=c(5,15,25),
                        range = c(0,15)) +
  scale_color_manual(values = my_colors) +
  theme(axis.text = element_text(size = 24),
        plot.title = element_text(size = 24),
        legend.position = "none",
        axis.title.y = element_text(size = 24,
                                    margin = margin(r = 15)))


p2n <- ggplot() + geom_line(data = pred[pred$type_exact == "nguyen2",],
                            aes(x = dose, y = resp, color = "Dengue virus 2"),
                            linewidth = 1.3, alpha = 0.9) +
  geom_point(data = nguyen_pfu2_sol2,
             aes(x = log_V, y = k/N, size = N, color = "Dengue virus 2"),
             alpha = 0.7) +
  theme_classic() +
  labs(y = "Prob mosquito body infection",
       x = "",
       size = "") +
  ggtitle("Dengue virus 2") +
    scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.03,0.04))) +
  scale_size_continuous(limits=c(1,30),breaks=c(5,15,25),
                        range = c(0,15)) +
  scale_color_manual(values = my_colors) +
  theme(axis.text = element_text(size = 24),
        plot.title = element_text(size = 24),
        legend.position = "none",
        axis.title.y = element_text(size = 24,
                                    margin = margin(r = 15)))


p3n <- ggplot() + geom_line(data = pred[pred$type_exact == "nguyen3",],
                            aes(x = dose, y = resp, color = "Dengue virus 3"),
                            linewidth = 1.3, alpha = 0.9) +
  geom_point(data = nguyen_pfu3_sol2,
             aes(x = log_V, y = k/N, size = N, color = "Dengue virus 3"),
             alpha = 0.7) +
  theme_classic() +
  labs(y = "Prob mosquito body infection",
       x = "",
       size = "") +
  ggtitle("Dengue virus 3") +
    scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.03,0.04))) +
  scale_size_continuous(limits=c(1,30),breaks=c(5,15,25),
                        range = c(0,15)) +
  scale_color_manual(values = my_colors) +
  theme(axis.text = element_text(size = 24),
        plot.title = element_text(size = 24),
        legend.position = "none",
        axis.title.y = element_text(size = 24,
                                    margin = margin(r = 15)))


p4n <- ggplot() + geom_line(data = pred[pred$type_exact == "nguyen4",],
                            aes(x = dose, y = resp, color = "Dengue virus 4"),
                            linewidth = 1.3, alpha = 0.9) +
  geom_point(data = nguyen_pfu4_sol2,
             aes(x = log_V, y = k/N, size = N, color = "Dengue virus 4"),
             alpha = 0.7) +
  theme_classic() +
  labs(y = "Prob mosquito body infection",
       x = bquote("Virus titer ("*log[10]~"PFU/ml)"),
       size = "") +
  ggtitle("Dengue virus 4") +
    scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.03,0.04))) +
  scale_size_continuous(limits=c(1,30),breaks=c(5,15,25),
                        range = c(0,15)) +
  scale_color_manual(values = my_colors) +
  theme(axis.text = element_text(size = 24),
        plot.title = element_text(size = 24),
        legend.position = "none",
        axis.title.x = element_text(size = 24,
                                    margin = margin(t = 15)),
        axis.title.y = element_text(size = 24,
                                    margin = margin(r = 15)))

# go to next chunk to assemble with other fits and save the figure
```

```{r}
#| label: suppl-plot-fit-and-data-LEG-SOL2
#| echo: false

duong_pfu1_sol2 <- conversion_and_small_values_correction(duong_df,
                                                          serotype = 1,
                                                          solution = 2) 
duong_pfu4_sol2 <- conversion_and_small_values_correction(duong_df,
                                                          serotype = 4,
                                                          solution = 2) 
# note : DENV2 fit was excluded because it was not insightful (no sigmoidal shape), because of data conversion

best1_duong <- readRDS(paste0(save_path,"betabinom_Log_DENV1_Duong_LEG.rds"))
best4_duong <- readRDS(paste0(save_path,"betabinom_Hill_DENV4_Duong_LEG.rds"))


best_zikv_leg <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_squirrel_LEG.rds")) 
predframe <- seq(0,10,length.out = 60)

fit_zikv_leg <- LogFunction(log_V = predframe,
                 log_beta0 = as.numeric(best_zikv_leg@coef[1]),
                 beta1 = as.numeric(best_zikv_leg@coef[2]))

fit1_duong <- LogFunction(log_V = predframe,
                          log_beta0 = as.numeric(best1_duong@coef[1]),
                          beta1 = as.numeric(best1_duong@coef[2]))

fit4_duong <- Hill(log_V = predframe,
                       gamma0 = exp(best4_duong@coef[1]),
                       gamma1 = best4_duong@coef[2])

pred <- data.frame(dose = rep(predframe,3),
                   resp = c(fit_zikv_leg,
                            fit1_duong,
                            fit4_duong),
                   type_exact = rep(c("zikv", "duong1", "duong4"), each = length(predframe)),
                   type_paper = rep(c("ZIKV - Present study", "Duong et al. 2015",
                                      "Duong et al. 2015"), each = length(predframe)),
                   virus = rep(c("ZIKV",
                                 "DENV-1",
                                 "DENV-4"), each = length(predframe)))

my_colors <- c("Dengue virus 1" = "#252525",
               "Dengue virus 2" = "#636363",
               "Dengue virus 3" = "#969696",
               "Dengue virus 4" = "#cccccc",
               "Zika virus" = "#2b8cbe")

pzl <- ggplot() + geom_line(aes(x = predframe, y = fit_zikv_leg,
                                color = "Zika virus"), linewidth = 1.3, alpha = 0.9) +
  geom_point(data = zikv_leg, aes(x = log_V, y = k/N, size = N,
                                  color = "Zika virus"), alpha = 0.7) +
  theme_classic() +
  labs(y = "Prob mosquito leg infection",
       x = "",
       size = "") +
  ggtitle("Zika virus") +
    scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.03,0.04))) +
  scale_size_continuous(limits=c(1,30),breaks=c(5,15,25),
                        range = c(0,15)) +
  scale_color_manual(values = my_colors) +
  theme(axis.text = element_text(size = 24),
        plot.title = element_text(size = 24),
        legend.position = "none",
        axis.title.y = element_text(size = 24,
                                    margin = margin(r = 15)))


p1d <- ggplot() + geom_line(data = pred[pred$type_exact == "duong1",],
                            aes(x = dose, y = resp, color = "Dengue virus 1"),
                            linewidth = 1.3, alpha = 0.9) +
  geom_point(data = duong_pfu1_sol2,
             aes(x = log_V, y = k/N, size = N, color = "Dengue virus 1"),
             alpha = 0.7) +
  theme_classic() +
  labs(y = "Prob mosquito leg infection",
       x = "",
       size = "") +
  ggtitle("Dengue virus 1") +
    scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.03,0.04))) +
  scale_size_continuous(limits=c(1,30),breaks=c(5,15,25),
                        range = c(0,15)) +
  scale_color_manual(values = my_colors) +
  theme(axis.text = element_text(size = 24),
        plot.title = element_text(size = 24),
        legend.position = "none",
        axis.title.y = element_text(size = 24,
                                    margin = margin(r = 15)))


p4d <- ggplot() + geom_line(data = pred[pred$type_exact == "duong4",],
                            aes(x = dose, y = resp, color = "Dengue virus 4"),
                            linewidth = 1.3, alpha = 0.9) +
  geom_point(data = duong_pfu4_sol2,
             aes(x = log_V, y = k/N, size = N, color = "Dengue virus 4"),
             alpha = 0.7) +
  theme_classic() +
  labs(y = "Prob mosquito leg infection",
       x = bquote("Virus titer ("*log[10]~"PFU/ml)"),
       size = "") +
  ggtitle("Dengue virus 4") +
  scale_x_continuous(limits = c(0,8.15),
                   expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.03,0.04))) +
  scale_size_continuous(limits=c(1,30),breaks=c(5,15,25),
                        range = c(0,15)) +
  scale_color_manual(values = my_colors) +
  theme(axis.text = element_text(size = 24),
        plot.title = element_text(size = 24),
        legend.position = "none",
        axis.title.x = element_text(size = 24,
                                    margin = margin(t = 15)),
        axis.title.y = element_text(size = 24,
                                    margin = margin(r = 15)))


# Assembly

p <- (pzb | pzl) / (p1n | p1d) / (p2n + plot_spacer()) / (p3n + plot_spacer()) / (p4n + p4d)

png(filename = "../output/figures/suppl/Figure_S9.png", width = 1600, height = 2600)
plot(p) 
dev.off()

```

```{r}
#| label: differences-squirrel-cyno-fits
#| echo: false

# BODY -----

best_zikv_sq_body <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_squirrel_BODY.rds"))
best_zikv_cy_body <- readRDS(paste0(save_path,"binom_Ferg_sylv_ZIKV_cyno_BODY.rds"))
best_zikv_all_body <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_all_BODY.rds"))


lrt(LL0 = best_zikv_all_body@details$value, 
    LL1 = sum(best_zikv_sq_body@details$value,best_zikv_cy_body@details$value),
    df0 = 3, df1 = 5) 
# Body fits are significantly different
# $L01
# [1] 13.81493
# 
# $df
# [1] 2
# 
# $`p-value`
# [1] 0.001000291

# LEG ----
best_zikv_sq_leg <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_squirrel_LEG.rds"))
best_zikv_cy_leg <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_cyno_LEG.rds"))
best_zikv_all_leg <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_all_LEG.rds"))

lrt(LL0 = best_zikv_all_leg@details$value, 
    LL1 = sum(best_zikv_sq_leg@details$value,best_zikv_cy_leg@details$value),
    df0 = 3, df1 = 6) 
# leg fits are not significantly different
# $L01
# [1] 7.692258
# 
# $df
# [1] 3
# 
# $`p-value`
# [1] 0.05281894

```

```{r}
#| label: dose-50-plot-uncertainty-BODY
#| echo: false

# Uncertainty around fits and dose 50 -----
best1_nguyen <- readRDS(paste0(save_path,"betabinom_Log_DENV1_Nguyen_BODY.rds"))
best2_nguyen <- readRDS(paste0(save_path,"betabinom_Log_DENV2_Nguyen_BODY.rds"))
best3_nguyen <- readRDS(paste0(save_path,"betabinom_Log_DENV3_Nguyen_BODY.rds"))
best4_nguyen <- readRDS(paste0(save_path,"betabinom_Log_DENV4_Nguyen_BODY.rds"))

best_zikv_sq_body <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_squirrel_BODY.rds"))
best_zikv_cy_body <- readRDS(paste0(save_path,"binom_Ferg_sylv_ZIKV_cyno_BODY.rds"))
best_zikv_all_body <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_all_BODY.rds"))

samples = 5e3
LogV_vector = seq(0,10, length.out = 500) # to make sure we have a proba close enough to 50% in each curve

# The function applies truncated normal sampling for parameters which should not cross certain boundaries
# to keep the output between 0 and 1
# if such cases still occur, we apply a brut-force artificial resampling, to keep only trajectories between 0 and 1

N1 <- compute_uncertainty_dose_resp(best1_nguyen, samples, LogV_vector, LogFunction, "Log")
N1_50 <- N1$dose50_estim
# N1_CI <- quantile(N1$dose50_CI, probs = c(0.025, 0.975))
# previously CI was computed this way
# to be consistent with what is plotted (only minor inconsistencies)
# confidence intervals directly computed based on the envelope
# find the dose for which min/max 95 are close to 0.5
# reversed : min is found with upper envelope (max95) and vice versa
# still, there can be small inconsistencies with the published version because of the random sampling
N1_CI <- c(N1$envelope$dose[which.min(abs(N1$envelope$max_95-0.5))],
           N1$envelope$dose[which.min(abs(N1$envelope$min_95-0.5))])

N2 <- compute_uncertainty_dose_resp(best2_nguyen, samples, LogV_vector, LogFunction, "Log")
N2_50 <- N2$dose50_estim
N2_CI <- c(N2$envelope$dose[which.min(abs(N2$envelope$max_95-0.5))],
           N2$envelope$dose[which.min(abs(N2$envelope$min_95-0.5))])

N3 <- compute_uncertainty_dose_resp(best3_nguyen, samples, LogV_vector, LogFunction, "Log")
N3_50 <-  N3$dose50_estim
N3_CI <- c(N3$envelope$dose[which.min(abs(N3$envelope$max_95-0.5))],
           N3$envelope$dose[which.min(abs(N3$envelope$min_95-0.5))])

N4 <- compute_uncertainty_dose_resp(best4_nguyen, samples, LogV_vector, LogFunction, "Log")
N4_50 <- N4$dose50_estim
N4_CI <- c(N4$envelope$dose[which.min(abs(N4$envelope$max_95-0.5))],
           N4$envelope$dose[which.min(abs(N4$envelope$min_95-0.5))])

Z_sq <- compute_uncertainty_dose_resp(best_zikv_sq_body, samples, LogV_vector, LogFunction, "Log", type = "betabinom")
Z_sq_50 <- Z_sq$dose50_estim
Z_sq_CI <- c(Z_sq$envelope$dose[which.min(abs(Z_sq$envelope$max_95-0.5))],
          Z_sq$envelope$dose[which.min(abs(Z_sq$envelope$min_95-0.5))])

Z_cy <- compute_uncertainty_dose_resp(best_zikv_cy_body, samples, LogV_vector, Ferguson, "Ferguson", type = "binom")
Z_cy_50 <- Z_cy$dose50_estim
Z_cy_CI <- c(Z_cy$envelope$dose[which.min(abs(Z_cy$envelope$max_95-0.5))],
          Z_cy$envelope$dose[which.min(abs(Z_cy$envelope$min_95-0.5))])

Z <- compute_uncertainty_dose_resp(best_zikv_all_body, samples, LogV_vector, LogFunction, "Log", type = "betabinom")
Z_50 <- Z$dose50_estim
Z_CI <- c(Z$envelope$dose[which.min(abs(Z$envelope$max_95-0.5))],
          Z$envelope$dose[which.min(abs(Z$envelope$min_95-0.5))])

# sprintf is used to show the 0 decimals even when rounded to integer
labelN1 <- paste0("Dengue virus 1\n",(sprintf('%.2f',N1_50)),
                                      " [",
                                      (sprintf('%.2f',N1_CI[1])),";",(sprintf('%.2f',N1_CI[2])),
                                      "]")

labelN2 <- paste0("Dengue virus 2\n",(sprintf('%.2f',N2_50)),
                                      " [",
                                      (sprintf('%.2f',N2_CI[1])),";",(sprintf('%.2f',N2_CI[2])),
                                      "]")

labelN3 <- paste0("Dengue virus 3\n",(sprintf('%.2f',N3_50)),
                                      " [",
                                      (sprintf('%.2f',N3_CI[1])),";",(sprintf('%.2f',N3_CI[2])),
                                      "]")

labelN4 <- paste0("Dengue virus 4\n",(sprintf('%.2f',N4_50)),
                                      " [",
                                      (sprintf('%.2f',N4_CI[1])),";",(sprintf('%.2f',N4_CI[2])),
                                      "]")

legend_title <- bquote("Virus " ~ID[50]~"[CI]") 

# Merge NHP species ----

my_colors <- c("Dengue virus 1" = "#252525",
               "Dengue virus 2" = "#636363",
               "Dengue virus 3" = "#969696",
               "Dengue virus 4" = "#cccccc",
               "Zika virus" = "#2b8cbe")

labelZ <- paste0("Zika virus\n",(sprintf('%.2f',Z_50)),
                                      " [",
                                      (sprintf('%.2f',Z_CI[1])),";",(sprintf('%.2f',Z_CI[2])),
                                      "]")
  

p1 <- ggplot() + 
  geom_vline(aes(color = "Zika virus", xintercept = Z_50)) +
  geom_vline(aes(color = "Dengue virus 1", xintercept = N1_50)) +
  geom_line(data = N1$envelope, aes(x = dose, y = fit, color = "Dengue virus 1"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = N1$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Dengue virus 1"), alpha = 0.2) +
  geom_line(data = Z$envelope, aes(x = dose, y = fit, color = "Zika virus"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = Z$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Zika virus"), alpha = 0.2) +
  geom_point(aes(x = N1_50, y = 0.5,
                 color = "Dengue virus 1"),
             size = 4, alpha = 0.8) +
  geom_point(aes(x = Z_50, y = 0.5,
               color = "Zika virus"),
             size = 4, alpha = 0.8) +
  theme_classic() +
  scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.01,0.03))) +
  scale_color_manual(values = my_colors[c(1,5)],
                     name = legend_title,
                     labels = c(labelN1,labelZ)) +
  scale_fill_manual(values = my_colors[c(1,5)],
                     name = legend_title,
                     labels = c(labelN1,labelZ)) +
  labs(x = "",
       y = "Prob mosquito body infection") +
  guides(color = guide_legend(nrow = 3),
         fill = guide_legend(nrow = 3)) +
  theme_classic() +
  theme(axis.text = element_text(size = 20),
        axis.title.x = element_text(size = 20),
        axis.title.y = element_text(size = 20,
                                    margin = margin(r = 15)),
        legend.text = element_text(size = 19),
        legend.title = element_text(size = 19),
        legend.position = c(0.22,0.75),
        plot.title = element_text(size = 20),
        plot.margin = margin(t = 0, r = 15, b = 0, l = 0),
        legend.background = element_rect(color = NA, fill = NA))

p2 <- ggplot() + 
  geom_vline(aes(color = "Zika virus", xintercept = Z_50)) +
  geom_vline(aes(color = "Dengue virus 2", xintercept = N2_50)) +
  geom_line(data = N2$envelope, aes(x = dose, y = fit, color = "Dengue virus 2"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = N2$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Dengue virus 2"), alpha = 0.2) +
  geom_line(data = Z$envelope, aes(x = dose, y = fit, color = "Zika virus"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = Z$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                     fill = "Zika virus"), alpha = 0.2) +
  geom_point(aes(x = N2_50, y = 0.5,
                 color = "Dengue virus 2"),
             size = 4, alpha = 0.8) +
  geom_point(aes(x = Z_50, y = 0.5,
               color = "Zika virus"),
             size = 4, alpha = 0.8) +
  theme_classic() +
  scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.01,0.03))) +
  scale_color_manual(values = my_colors[c(2,5)],
                     name = "",
                     labels = c(labelN2,labelZ)) +
  scale_fill_manual(values = my_colors[c(2,5)],
                     name = "",
                     labels = c(labelN2,labelZ)) +
  labs(x = "",
       y = "") +
  guides(color = guide_legend(nrow = 3),
         fill = guide_legend(nrow = 3)) +
  theme_classic() +
  theme(axis.text = element_text(size = 20),
        axis.title.x = element_text(size = 20),
        axis.title.y = element_text(size = 20,
                                    margin = margin(r = 0)),
        legend.text = element_text(size = 19),
        legend.title = element_text(size = 19),
        legend.position = c(0.22,0.75),
        plot.title = element_text(size = 20),
        plot.margin = margin(t = 0, r = 0, b = 0, l = 0),
        legend.background = element_rect(color = NA, fill = NA))

p3 <- ggplot() + 
  geom_vline(aes(color = "Zika virus", xintercept = Z_50)) +
  geom_vline(aes(color = "Dengue virus 3", xintercept = N3_50)) +
  geom_line(data = N3$envelope, aes(x = dose, y = fit, color = "Dengue virus 3"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = N3$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Dengue virus 3"), alpha = 0.2) +
  geom_line(data = Z$envelope, aes(x = dose, y = fit, color = "Zika virus"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = Z$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                     fill = "Zika virus"), alpha = 0.2) +
  geom_point(aes(x = N3_50, y = 0.5,
                 color = "Dengue virus 3"),
             size = 4, alpha = 0.8) +
  geom_point(aes(x = Z_50, y = 0.5,
               color = "Zika virus"),
             size = 4, alpha = 0.8) +
  theme_classic() +
  scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.01,0.03))) +
  scale_color_manual(values = my_colors[c(3,5)],
                     name = "",
                     labels = c(labelN3,labelZ)) +
  scale_fill_manual(values = my_colors[c(3,5)],
                     name = "",
                     labels = c(labelN3,labelZ)) +
  labs(x = bquote("Virus titer ("*log[10]~"PFU/ml)"),
       y = "Prob mosquito body infection") +
  guides(color = guide_legend(nrow = 3),
         fill = guide_legend(nrow = 3)) +
  theme_classic() +
  theme(axis.text = element_text(size = 20),
        axis.title.x = element_text(size = 20),
        axis.title.y = element_text(size = 20,
                                    margin = margin(r = 15)),
        legend.text = element_text(size = 19),
        legend.title = element_text(size = 19),
        legend.position = c(0.22,0.75),
        plot.title = element_text(size = 20),
        plot.margin = margin(t = 0, r = 15, b = 0, l = 0),
        legend.background = element_rect(color = NA, fill = NA))


p4 <- ggplot() + 
  geom_vline(aes(color = "Zika virus", xintercept = Z_50)) +
  geom_vline(aes(color = "Dengue virus 4", xintercept = N4_50)) +
  geom_line(data = N4$envelope, aes(x = dose, y = fit, color = "Dengue virus 4"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = N4$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Dengue virus 4"), alpha = 0.2) +
  geom_line(data = Z$envelope, aes(x = dose, y = fit, color = "Zika virus"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = Z$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                     fill = "Zika virus"), alpha = 0.2) +
  geom_point(aes(x = N4_50, y = 0.5,
                 color = "Dengue virus 4"),
             size = 4, alpha = 0.8) +
  geom_point(aes(x = Z_50, y = 0.5,
               color = "Zika virus"),
             size = 4, alpha = 0.8) +
  theme_classic() +
  scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.01,0.03))) +
  scale_color_manual(values = my_colors[c(4,5)],
                     name = "",
                     labels = c(labelN4,labelZ)) +
  scale_fill_manual(values = my_colors[c(4,5)],
                     name = "",
                     labels = c(labelN4,labelZ)) +
  labs(x = bquote("Virus titer ("*log[10]~"PFU/ml)"),
       y = "") +
  guides(color = guide_legend(nrow = 3),
         fill = guide_legend(nrow = 3)) +
  theme_classic() +
  theme(axis.text = element_text(size = 20),
        axis.title.x = element_text(size = 20),
        axis.title.y = element_text(size = 20,
                                    margin = margin(r = 0)),
        legend.text = element_text(size = 19),
        legend.title = element_text(size = 19),
        legend.position = c(0.22,0.75),
        plot.title = element_text(size = 20),
        plot.margin = margin(t = 0, r = 0, b = 0, l = 0),
        legend.background = element_rect(color = NA, fill = NA))


p <- (p1 | p2) / (p3 | p4)
p <- p + plot_annotation(tag_levels = "A") & theme(plot.tag = element_text(size = 19),
                                                   plot.tag.position = c(0.15,0.98))
png(filename = "../output/figures/main/Figure_5_merge_cyno_squirrel.png",
    width = 1300, height = 900)
print(p)
dev.off()


# One fit per NHP species ----

my_colors <- c("Dengue virus 1" = "#252525",
               "Dengue virus 2" = "#636363",
               "Dengue virus 3" = "#969696",
               "Dengue virus 4" = "#cccccc",
               "Zika virus squirrel" = "#2b8cbe",
               "Zika virus cyno" = "#2b8cbe")

my_linetypes <- c("Dengue virus 1" = "solid",
               "Dengue virus 2" = "solid",
               "Dengue virus 3" = "solid",
               "Dengue virus 4" = "solid",
               "Zika virus squirrel" = "dotted",
               "Zika virus cyno" = "dashed")

override.linetype <- c("solid","dotted","dashed")
override.fill <- c("#252525","#2b8cbe","#2b8cbe")

labelZ_sq <- paste0("Zika virus from\nsquirrel monkeys\n",(sprintf('%.2f',Z_sq_50)),
                                      " [",
                                      (sprintf('%.2f',Z_sq_CI[1])),";",(sprintf('%.2f',Z_sq_CI[2])),
                                      "]")

labelZ_cy <- paste0("Zika virus from\ncynomolgus macaques\n",(sprintf('%.2f',Z_cy_50)),
                                      " [",
                                      (sprintf('%.2f',Z_cy_CI[1])),";",(sprintf('%.2f',Z_cy_CI[2])),
                                      "]")
  
p1 <- ggplot() + 
  geom_vline(aes(xintercept = Z_sq_50),
             color = "#2b8cbe") +
  geom_vline(aes(xintercept = Z_cy_50),
             color = "#2b8cbe") +
  geom_vline(aes(xintercept = N1_50),
             color = "#252525") +
  geom_line(data = N1$envelope, aes(x = dose, y = fit, color = "Dengue virus 1"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = N1$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Dengue virus 1"), alpha = 0.2) +
  geom_line(data = Z_sq$envelope, aes(x = dose, y = fit, color = "Zika virus squirrel",
                                      linetype = "Zika virus squirrel"),
            linewidth = 1.3, alpha = 0.9) +
  geom_line(data = Z_cy$envelope, aes(x = dose, y = fit, color = "Zika virus cyno",
                                      linetype = "Zika virus cyno"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = Z_sq$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Zika virus squirrel"), alpha = 0.2) +
  geom_ribbon(data = Z_cy$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Zika virus cyno"), alpha = 0.2) +
  geom_point(aes(x = N1_50, y = 0.5,
                 color = "Dengue virus 1"),
             size = 4, alpha = 0.8) +
  geom_point(aes(x = Z_sq_50, y = 0.5,
               color = "Zika virus squirrel"),
             size = 4, alpha = 0.8) +
  geom_point(aes(x = Z_cy_50, y = 0.5,
               color = "Zika virus cyno"),
             size = 4, alpha = 0.8) +
  theme_classic() +
  scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.01,0.03))) +
  guides(colour = guide_legend(override.aes = list(fill = override.fill,
                                                   linetype = override.linetype,
                                                   size = 3.5))) +
  scale_color_manual(values = my_colors[c(1,5,6)],
                     name = legend_title,
                     labels = c(labelN1,labelZ_sq,labelZ_cy)) +
  scale_fill_manual(values = my_colors[c(1,5,6)],
                     name = legend_title,
                     labels = c(labelN1,labelZ_sq,labelZ_cy)) +
  scale_linetype_manual(values = my_linetypes[c(1,5,6)],
                   name = legend_title,
                   labels = c(labelN1,labelZ_sq,labelZ_cy),
                   guide = FALSE) +
  labs(x = "",
       y = "Prob mosquito body infection") +
  theme_classic() +
  theme(legend.key.width = unit(1.3,'cm'),
        legend.key.height = unit(1,'cm'),
        axis.text = element_text(size = 20),
        axis.title.x = element_text(size = 20),
        axis.title.y = element_text(size = 20,
                                    margin = margin(r = 15)),
        legend.text = element_text(size = 19),
        legend.title = element_text(size = 19),
        legend.position = c(0.22,0.75),
        plot.title = element_text(size = 20),
        plot.margin = margin(t = 0, r = 15, b = 0, l = 0),
        legend.background = element_rect(color = NA, fill = NA))

p2 <- ggplot() + 
  geom_vline(aes(xintercept = Z_sq_50),
             color = "#2b8cbe") +
  geom_vline(aes(xintercept = Z_cy_50),
             color = "#2b8cbe") +
  geom_vline(aes(xintercept = N2_50),
             color = "#636363") +
  geom_line(data = N2$envelope, aes(x = dose, y = fit, color = "Dengue virus 2"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = N2$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Dengue virus 2"), alpha = 0.2) +
  geom_line(data = Z_sq$envelope, aes(x = dose, y = fit, color = "Zika virus squirrel",
                                      linetype = "Zika virus squirrel"),
            linewidth = 1.3, alpha = 0.9) +
  geom_line(data = Z_cy$envelope, aes(x = dose, y = fit, color = "Zika virus cyno",
                                      linetype = "Zika virus cyno"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = Z_sq$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Zika virus squirrel"), alpha = 0.2) +
  geom_ribbon(data = Z_cy$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Zika virus cyno"), alpha = 0.2) +
  geom_point(aes(x = N2_50, y = 0.5,
                 color = "Dengue virus 2"),
             size = 4, alpha = 0.8) +
  geom_point(aes(x = Z_sq_50, y = 0.5,
               color = "Zika virus squirrel"),
             size = 4, alpha = 0.8) +
  geom_point(aes(x = Z_cy_50, y = 0.5,
               color = "Zika virus cyno"),
             size = 4, alpha = 0.8) +
  theme_classic() +
  scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.01,0.03))) +
  guides(colour = guide_legend(override.aes = list(fill = override.fill,
                                                   linetype = override.linetype,
                                                   size = 3.5))) +
  scale_color_manual(values = my_colors[c(2,5,6)],
                     name = "",
                     labels = c(labelN2,labelZ_sq,labelZ_cy)) +
  scale_fill_manual(values = my_colors[c(2,5,6)],
                     name = "",
                     labels = c(labelN2,labelZ_sq,labelZ_cy)) +
  scale_linetype_manual(values = my_linetypes[c(2,5,6)],
                   name = "",
                   labels = c(labelN2,labelZ_sq,labelZ_cy),
                   guide = FALSE) +
  labs(x = "",
       y = "") +
  guides(color = guide_legend(nrow = 3),
         fill = guide_legend(nrow = 3)) +
  theme_classic() +
  theme(axis.text = element_text(size = 20),
        axis.title.x = element_text(size = 20),
        axis.title.y = element_text(size = 20,
                                    margin = margin(r = 0)),
        legend.text = element_text(size = 19),
        legend.title = element_text(size = 19),
        legend.position = "none",
        plot.title = element_text(size = 20),
        plot.margin = margin(t = 0, r = 0, b = 0, l = 0),
        legend.background = element_rect(color = NA, fill = NA))

p3 <- ggplot() + 
  geom_vline(aes(xintercept = Z_sq_50),
             color = "#2b8cbe") +
  geom_vline(aes(xintercept = Z_cy_50),
             color = "#2b8cbe") +
  geom_vline(aes(xintercept = N3_50),
             color = "#969696") +
  geom_line(data = N3$envelope, aes(x = dose, y = fit, color = "Dengue virus 3"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = N3$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Dengue virus 3"), alpha = 0.2) +
  geom_line(data = Z_sq$envelope, aes(x = dose, y = fit, color = "Zika virus squirrel",
                                      linetype = "Zika virus squirrel"),
            linewidth = 1.3, alpha = 0.9) +
  geom_line(data = Z_cy$envelope, aes(x = dose, y = fit, color = "Zika virus cyno",
                                      linetype = "Zika virus cyno"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = Z_sq$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Zika virus squirrel"), alpha = 0.2) +
  geom_ribbon(data = Z_cy$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Zika virus cyno"), alpha = 0.2) +
  geom_point(aes(x = N3_50, y = 0.5,
                 color = "Dengue virus 3"),
             size = 4, alpha = 0.8) +
  geom_point(aes(x = Z_sq_50, y = 0.5,
               color = "Zika virus squirrel"),
             size = 4, alpha = 0.8) +
  geom_point(aes(x = Z_cy_50, y = 0.5,
               color = "Zika virus cyno"),
             size = 4, alpha = 0.8) +
  theme_classic() +
  scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.01,0.03))) +
  guides(colour = guide_legend(override.aes = list(fill = override.fill,
                                                   linetype = override.linetype,
                                                   size = 3.5))) +
  scale_color_manual(values = my_colors[c(3,5,6)],
                     name = "",
                     labels = c(labelN3,labelZ_sq,labelZ_cy)) +
  scale_fill_manual(values = my_colors[c(3,5,6)],
                     name = "",
                     labels = c(labelN3,labelZ_sq,labelZ_cy)) +
  scale_linetype_manual(values = my_linetypes[c(3,5,6)],
                   name = "",
                   labels = c(labelN3,labelZ_sq,labelZ_cy),
                   guide = FALSE) +
  labs(x = bquote("Virus titer ("*log[10]~"PFU/ml)"),
       y = "Prob mosquito body infection") +
  guides(color = guide_legend(nrow = 3),
         fill = guide_legend(nrow = 3)) +
  theme_classic() +
  theme(axis.text = element_text(size = 20),
        axis.title.x = element_text(size = 20),
        axis.title.y = element_text(size = 20,
                                    margin = margin(r = 15)),
        legend.text = element_text(size = 19),
        legend.title = element_text(size = 19),
        legend.position = "none",
        plot.title = element_text(size = 20),
        plot.margin = margin(t = 0, r = 15, b = 0, l = 0),
        legend.background = element_rect(color = NA, fill = NA))


p4 <- ggplot() + 
  geom_vline(aes(xintercept = Z_sq_50),
             color = "#2b8cbe") +
  geom_vline(aes(xintercept = Z_cy_50),
             color = "#2b8cbe") +
  geom_vline(aes(xintercept = N4_50),
             color = "#cccccc") +
  geom_line(data = N4$envelope, aes(x = dose, y = fit, color = "Dengue virus 4"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = N4$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Dengue virus 4"), alpha = 0.2) +
  geom_line(data = Z_sq$envelope, aes(x = dose, y = fit, color = "Zika virus squirrel",
                                      linetype = "Zika virus squirrel"),
            linewidth = 1.3, alpha = 0.9) +
  geom_line(data = Z_cy$envelope, aes(x = dose, y = fit, color = "Zika virus cyno",
                                      linetype = "Zika virus cyno"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = Z_sq$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Zika virus squirrel"), alpha = 0.2) +
  geom_ribbon(data = Z_cy$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Zika virus cyno"), alpha = 0.2) +
  geom_point(aes(x = N4_50, y = 0.5,
                 color = "Dengue virus 4"),
             size = 4, alpha = 0.8) +
  geom_point(aes(x = Z_sq_50, y = 0.5,
               color = "Zika virus squirrel"),
             size = 4, alpha = 0.8) +
  geom_point(aes(x = Z_cy_50, y = 0.5,
               color = "Zika virus cyno"),
             size = 4, alpha = 0.8) +
  theme_classic() +
  scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.01,0.03))) +
  guides(colour = guide_legend(override.aes = list(fill = override.fill,
                                                   linetype = override.linetype,
                                                   size = 3.5))) +
  scale_color_manual(values = my_colors[c(4,5,6)],
                     name = "",
                     labels = c(labelN4,labelZ_sq,labelZ_cy)) +
  scale_fill_manual(values = my_colors[c(4,5,6)],
                     name = "",
                     labels = c(labelN4,labelZ_sq,labelZ_cy)) +
  scale_linetype_manual(values = my_linetypes[c(4,5,6)],
                   name = "",
                   labels = c(labelN4,labelZ_sq,labelZ_cy),
                   guide = FALSE) +
  labs(x = bquote("Virus titer ("*log[10]~"PFU/ml)"),
       y = "") +
  guides(color = guide_legend(nrow = 3),
         fill = guide_legend(nrow = 3)) +
  theme_classic() +
  theme(axis.text = element_text(size = 20),
        axis.title.x = element_text(size = 20),
        axis.title.y = element_text(size = 20,
                                    margin = margin(r = 0)),
        legend.text = element_text(size = 19),
        legend.title = element_text(size = 19),
        legend.position = "none",
        plot.title = element_text(size = 20),
        plot.margin = margin(t = 0, r = 0, b = 0, l = 0),
        legend.background = element_rect(color = NA, fill = NA))


p <- (p1 | p2) / (p3 | p4)
p <- p + plot_annotation(tag_levels = "A") & theme(plot.tag = element_text(size = 19),
                                                   plot.tag.position = c(0.15,0.98))
png(filename = "../output/figures/main/Figure_5_separate_cyno_squirrel.png",
    width = 1300, height = 900)
print(p)
dev.off()

```


```{r}
#| label: dose-50-plot-uncertainty-LEG
#| echo: false

# Uncertainty around fits and dose 50 -----
best1_duong <- readRDS(paste0(save_path,"betabinom_Log_DENV1_Duong_LEG.rds"))
best2_duong <- readRDS(paste0(save_path,"betabinom_Log_DENV2_Duong_LEG.rds"))
best4_duong <- readRDS(paste0(save_path,"betabinom_Hill_DENV4_Duong_LEG.rds"))

best_zikv_sq_leg <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_squirrel_LEG.rds"))
best_zikv_cy_leg <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_cyno_LEG.rds"))
best_zikv_all_leg <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_all_LEG.rds"))

samples = 5e3
LogV_vector = seq(0,10, length.out = 500) # to make sure we have a proba close enough to 50% in each curve

# The function applies truncated normal sampling for parameters which should not cross certain boundaries
# to keep the output between 0 and 1
# if such cases still occur, we apply a brut-force artificial resampling, to keep only trajectories between 0 and 1

# some inconsistencies with the published version can exist, because of random sampling
Z_sq <- compute_uncertainty_dose_resp(best_zikv_sq_leg, samples, LogV_vector, LogFunction, "Log", type = "betabinom")
Z_sq_50 <- Z_sq$dose50_estim
Z_sq_CI <- c(Z_sq$envelope$dose[which.min(abs(Z_sq$envelope$max_95-0.5))],
          Z_sq$envelope$dose[which.min(abs(Z_sq$envelope$min_95-0.5))])

Z_cy <- compute_uncertainty_dose_resp(best_zikv_cy_leg, samples, LogV_vector, LogFunction, "Log", type = "betabinom")
Z_cy_50 <- Z_cy$dose50_estim
Z_cy_CI <- c(Z_cy$envelope$dose[which.min(abs(Z_cy$envelope$max_95-0.5))],
          Z_cy$envelope$dose[which.min(abs(Z_cy$envelope$min_95-0.5))])

Z <- compute_uncertainty_dose_resp(best_zikv_all_leg, samples, LogV_vector, LogFunction, "Log", type = "betabinom")
Z_50 <- Z$dose50_estim
Z_CI <- c(Z$envelope$dose[which.min(abs(Z$envelope$max_95-0.5))],
          Z$envelope$dose[which.min(abs(Z$envelope$min_95-0.5))])

D1 <- compute_uncertainty_dose_resp(best1_duong, samples, LogV_vector, LogFunction, "Log")
D1_50 <- D1$dose50_estim
D1_CI <- c(D1$envelope$dose[which.min(abs(D1$envelope$max_95-0.5))],
           D1$envelope$dose[which.min(abs(D1$envelope$min_95-0.5))])

D4 <- compute_uncertainty_dose_resp(best4_duong, samples, LogV_vector, Hill, "Hill")
D4_50 <- D4$dose50_estim
D4_CI <- c(D4$envelope$dose[which.min(abs(D4$envelope$max_95-0.5))],
           D4$envelope$dose[which.min(abs(D4$envelope$min_95-0.5))])

# sprintf is used to show the 0 decimals even when rounded to integer
labelD1 <- paste0("Dengue virus 1\n",(sprintf('%.2f',D1_50)),
                                      " [",
                                      (sprintf('%.2f',D1_CI[1])),";",(sprintf('%.2f',D1_CI[2])),
                                      "]")

labelD4 <- paste0("Dengue virus 4\n",(sprintf('%.2f',D4_50)),
                                      " [",
                                      (sprintf('%.2f',D4_CI[1])),";",(sprintf('%.2f',D4_CI[2])),
                                      "]")
legend_title <- bquote("Virus " ~ID[50]~"[CI]") 

# Merge NHP species ----
labelZ <- paste0("Zika virus\n",(sprintf('%.2f',Z_50)),
                                      " [",
                                      (sprintf('%.2f',Z_CI[1])),";",(sprintf('%.2f',Z_CI[2])),
                                      "]")

my_colors <- c("Dengue virus 1" = "#252525",
               "Dengue virus 2" = "#636363",
               "Dengue virus 3" = "#969696",
               "Dengue virus 4" = "#cccccc",
               "Zika virus" = "#2b8cbe")

p1 <- ggplot() + 
  geom_vline(aes(color = "Zika virus", xintercept = Z_50)) +
  geom_vline(aes(color = "Dengue virus 1", xintercept = D1_50)) +
  geom_line(data = D1$envelope, aes(x = dose, y = fit, color = "Dengue virus 1"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = D1$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Dengue virus 1"), alpha = 0.2) +
  geom_line(data = Z$envelope, aes(x = dose, y = fit, color = "Zika virus"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = Z$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Zika virus"), alpha = 0.2) +
  geom_point(aes(x = D1_50, y = 0.5,
                 color = "Dengue virus 1"),
             size = 4, alpha = 0.8) +
  geom_point(aes(x = Z_50, y = 0.5,
               color = "Zika virus"),
             size = 4, alpha = 0.8) +
  theme_classic() +
  scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.01,0.03))) +
  scale_color_manual(values = my_colors[c(1,5)],
                     name = legend_title,
                     labels = c(labelD1,labelZ)) +
  scale_fill_manual(values = my_colors[c(1,5)],
                     name = legend_title,
                     labels = c(labelD1,labelZ)) +
  labs(x = bquote("Virus titer ("*log[10]~"PFU/ml)"),
       y = "Prob mosquito leg infection") +
  guides(color = guide_legend(nrow = 3),
         fill = guide_legend(nrow = 3)) +
  theme_classic() +
  theme(axis.text = element_text(size = 20),
        axis.title.x = element_text(size = 20),
        axis.title.y = element_text(size = 20,
                                    margin = margin(r = 15)),
        legend.text = element_text(size = 19),
        legend.title = element_text(size = 19),
        legend.position = c(0.85,0.2),
        plot.title = element_text(size = 20),
        plot.margin = margin(t = 0, r = 15, b = 0, l = 0),
        legend.background = element_rect(color = NA, fill = NA))

p4 <- ggplot() + 
  geom_vline(aes(color = "Zika virus", xintercept = Z_50)) +
  geom_vline(aes(color = "Dengue virus 4", xintercept = D4_50)) +
  geom_line(data = D4$envelope, aes(x = dose, y = fit, color = "Dengue virus 4"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = D4$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Dengue virus 4"), alpha = 0.2) +
  geom_line(data = Z$envelope, aes(x = dose, y = fit, color = "Zika virus"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = Z$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                     fill = "Zika virus"), alpha = 0.2) +
  geom_point(aes(x = D4_50, y = 0.5,
                 color = "Dengue virus 4"),
             size = 4, alpha = 0.8) +
  geom_point(aes(x = Z_50, y = 0.5,
               color = "Zika virus"),
             size = 4, alpha = 0.8) +
  theme_classic() +
  scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.01,0.03))) +
  scale_color_manual(values = my_colors[c(4,5)],
                     name = "",
                     labels = c(labelD4,labelZ)) +
  scale_fill_manual(values = my_colors[c(4,5)],
                     name = "",
                     labels = c(labelD4,labelZ)) +
  labs(x = bquote("Virus titer ("*log[10]~"PFU/ml)"),
       y = "") +
  guides(color = guide_legend(nrow = 3),
         fill = guide_legend(nrow = 3)) +
  theme_classic() +
  theme(axis.text = element_text(size = 20),
        axis.title = element_text(size = 20),
        legend.text = element_text(size = 19),
        legend.title = element_text(size = 19),
        legend.position = c(0.85,0.2),
        plot.title = element_text(size = 20),
        plot.margin = margin(t = 0, r = 0, b = 0, l = 0),
        legend.background = element_rect(color = NA, fill = NA)) # to have no white around legend

p <- (p1 | p4) 
p <- p + plot_annotation(tag_levels = "A") & theme(plot.tag = element_text(size = 19),
                                                   plot.tag.position = c(0.15,0.98))
png(filename = "../output/figures/suppl/Figure_S10_merge_cyno_squirrel.png",
    width = 1300, height = 450)
print(p)
dev.off()

# One fit per NHP species ----

my_colors <- c("Dengue virus 1" = "#252525",
               "Dengue virus 2" = "#636363",
               "Dengue virus 3" = "#969696",
               "Dengue virus 4" = "#cccccc",
               "Zika virus squirrel" = "#2b8cbe",
               "Zika virus cyno" = "#2b8cbe")

my_linetypes <- c("Dengue virus 1" = "solid",
               "Dengue virus 2" = "solid",
               "Dengue virus 3" = "solid",
               "Dengue virus 4" = "solid",
               "Zika virus squirrel" = "dotted",
               "Zika virus cyno" = "dashed")

override.linetype <- c("solid","dotted","dashed")
override.fill <- c("#252525","#2b8cbe","#2b8cbe")

labelZ_sq <- paste0("Zika virus from\nsquirrel monkeys\n",(sprintf('%.2f',Z_sq_50)),
                                      " [",
                                      (sprintf('%.2f',Z_sq_CI[1])),";",(sprintf('%.2f',Z_sq_CI[2])),
                                      "]")

labelZ_cy <- paste0("Zika virus from\ncynomolgus macaques\n",(sprintf('%.2f',Z_cy_50)),
                                      " [",
                                      (sprintf('%.2f',Z_cy_CI[1])),";",(sprintf('%.2f',Z_cy_CI[2])),
                                      "]")
  
p1 <- ggplot() + 
  geom_vline(aes(xintercept = Z_sq_50),
             color = "#2b8cbe") +
  geom_vline(aes(xintercept = Z_cy_50),
             color = "#2b8cbe") +
  geom_vline(aes(xintercept = N1_50),
             color = "#252525") +
  geom_line(data = N1$envelope, aes(x = dose, y = fit, color = "Dengue virus 1"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = N1$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Dengue virus 1"), alpha = 0.2) +
  geom_line(data = Z_sq$envelope, aes(x = dose, y = fit, color = "Zika virus squirrel",
                                      linetype = "Zika virus squirrel"),
            linewidth = 1.3, alpha = 0.9) +
  geom_line(data = Z_cy$envelope, aes(x = dose, y = fit, color = "Zika virus cyno",
                                      linetype = "Zika virus cyno"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = Z_sq$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Zika virus squirrel"), alpha = 0.2) +
  geom_ribbon(data = Z_cy$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Zika virus cyno"), alpha = 0.2) +
  geom_point(aes(x = N1_50, y = 0.5,
                 color = "Dengue virus 1"),
             size = 4, alpha = 0.8) +
  geom_point(aes(x = Z_sq_50, y = 0.5,
               color = "Zika virus squirrel"),
             size = 4, alpha = 0.8) +
  geom_point(aes(x = Z_cy_50, y = 0.5,
               color = "Zika virus cyno"),
             size = 4, alpha = 0.8) +
  theme_classic() +
  scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.01,0.03))) +
  guides(colour = guide_legend(override.aes = list(fill = override.fill,
                                                   linetype = override.linetype,
                                                   size = 3.5))) +
  scale_color_manual(values = my_colors[c(1,5,6)],
                     name = legend_title,
                     labels = c(labelN1,labelZ_sq,labelZ_cy)) +
  scale_fill_manual(values = my_colors[c(1,5,6)],
                     name = legend_title,
                     labels = c(labelN1,labelZ_sq,labelZ_cy)) +
  scale_linetype_manual(values = my_linetypes[c(1,5,6)],
                   name = legend_title,
                   labels = c(labelN1,labelZ_sq,labelZ_cy),
                   guide = FALSE) +
  labs(x = bquote("Virus titer ("*log[10]~"PFU/ml)"),
       y = "Prob mosquito leg infection") +
  theme_classic() +
  theme(legend.key.width = unit(1.3,'cm'),
        legend.key.height = unit(1,'cm'),
        axis.text = element_text(size = 20),
        axis.title.x = element_text(size = 20),
        axis.title.y = element_text(size = 20,
                                    margin = margin(r = 15)),
        legend.text = element_text(size = 19),
        legend.title = element_text(size = 19),
        legend.position = c(0.8,0.3),
        plot.title = element_text(size = 20),
        plot.margin = margin(t = 0, r = 15, b = 0, l = 0),
        legend.background = element_rect(color = NA, fill = NA))

p4 <- ggplot() + 
  geom_vline(aes(xintercept = Z_sq_50),
             color = "#2b8cbe") +
  geom_vline(aes(xintercept = Z_cy_50),
             color = "#2b8cbe") +
  geom_vline(aes(xintercept = N4_50),
             color = "#cccccc") +
  geom_line(data = N4$envelope, aes(x = dose, y = fit, color = "Dengue virus 4"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = N4$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Dengue virus 4"), alpha = 0.2) +
  geom_line(data = Z_sq$envelope, aes(x = dose, y = fit, color = "Zika virus squirrel",
                                      linetype = "Zika virus squirrel"),
            linewidth = 1.3, alpha = 0.9) +
  geom_line(data = Z_cy$envelope, aes(x = dose, y = fit, color = "Zika virus cyno",
                                      linetype = "Zika virus cyno"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = Z_sq$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Zika virus squirrel"), alpha = 0.2) +
  geom_ribbon(data = Z_cy$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Zika virus cyno"), alpha = 0.2) +
  geom_point(aes(x = N4_50, y = 0.5,
                 color = "Dengue virus 4"),
             size = 4, alpha = 0.8) +
  geom_point(aes(x = Z_sq_50, y = 0.5,
               color = "Zika virus squirrel"),
             size = 4, alpha = 0.8) +
  geom_point(aes(x = Z_cy_50, y = 0.5,
               color = "Zika virus cyno"),
             size = 4, alpha = 0.8) +
  theme_classic() +
  scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.01,0.03))) +
  guides(colour = guide_legend(override.aes = list(fill = override.fill,
                                                   linetype = override.linetype,
                                                   size = 3.5))) +
  scale_color_manual(values = my_colors[c(4,5,6)],
                     name = "",
                     labels = c(labelN4,labelZ_sq,labelZ_cy)) +
  scale_fill_manual(values = my_colors[c(4,5,6)],
                     name = "",
                     labels = c(labelN4,labelZ_sq,labelZ_cy)) +
  scale_linetype_manual(values = my_linetypes[c(4,5,6)],
                   name = "",
                   labels = c(labelN4,labelZ_sq,labelZ_cy),
                   guide = FALSE) +
  labs(x = bquote("Virus titer ("*log[10]~"PFU/ml)"),
       y = "") +
  guides(color = guide_legend(nrow = 3),
         fill = guide_legend(nrow = 3)) +
  theme_classic() +
  theme(axis.text = element_text(size = 20),
        axis.title.x = element_text(size = 20),
        axis.title.y = element_text(size = 20,
                                    margin = margin(r = 0)),
        legend.text = element_text(size = 19),
        legend.title = element_text(size = 19),
        legend.position = "none",
        plot.title = element_text(size = 20),
        plot.margin = margin(t = 0, r = 0, b = 0, l = 0),
        legend.background = element_rect(color = NA, fill = NA))

p <- (p1 | p4) 
p <- p + plot_annotation(tag_levels = "A") & theme(plot.tag = element_text(size = 19),
                                                   plot.tag.position = c(0.15,0.98))
png(filename = "../output/figures/suppl/Figure_S10_separate_cyno_squirrel.png",
    width = 1300, height = 450)
print(p)
dev.off()

```
